/*
内容滚动插件
jquery.kxbdmarquee.js

*/
; (function (a) { a.fn.kxbdMarquee = function (b) { var c = a.extend({}, a.fn.kxbdMarquee.defaults, b); return this.each(function () { var m = a(this); var j = m.get(0); var k = m.width(); var h = m.height(); var l = m.children(); var n = l.children(); var d = 0; var g = (c.direction == "left" || c.direction == "right") ? 1 : 0; l.css(g ? "width" : "height", 10000); if (c.isEqual) { d = n[g ? "outerWidth" : "outerHeight"]() * n.length } else { n.each(function () { d += a(this)[g ? "outerWidth" : "outerHeight"]() }) } if (d < (g ? k : h)) { return } l.append(n.clone()).css(g ? "width" : "height", d * 2); var i = 0; function f() { var p = (c.direction == "left" || c.direction == "right") ? "scrollLeft" : "scrollTop"; if (c.loop > 0) { i += c.scrollAmount; if (i > d * c.loop) { j[p] = 0; return clearInterval(e) } } if (c.direction == "left" || c.direction == "up") { var o = j[p] + c.scrollAmount; if (o >= d) { o -= d } j[p] = o } else { var o = j[p] - c.scrollAmount; if (o <= 0) { o += d } j[p] = o } } var e = setInterval(f, c.scrollDelay); m.hover(function () { clearInterval(e) }, function () { clearInterval(e); e = setInterval(f, c.scrollDelay) }) }) }; a.fn.kxbdMarquee.defaults = { isEqual: true, loop: 0, direction: "left", scrollAmount: 1, scrollDelay: 20 }; a.fn.kxbdMarquee.setDefaults = function (b) { a.extend(a.fn.kxbdMarquee.defaults, b) } })(jQuery);